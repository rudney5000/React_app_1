{"ast":null,"code":"var _jsxFileName = \"/home/rudney/Bureau/react/react-app-1/src/components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [rangeValue, setRangeValue] = useState([36]);\n  const [selectedRadio, setSelectValue] = useState(\"\");\n  const radios = [\"Africa\", \"America\", \"Europe\", \"Asia\", \"Oceania\"];\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => setData(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"radio-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        defaultValue: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), radios.map(continent => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: continent,\n          name: \"continentRadio\",\n          onChange: e => setSelectedRadio(e.target.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: continent,\n          children: continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.slice(0, rangeValue).map((country, index) => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"dL8YmvdBbfYFzaSHdvZB2hIISPQ=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["axios","React","useEffect","useState","Card","Countries","data","setData","rangeValue","setRangeValue","selectedRadio","setSelectValue","radios","get","then","res","e","target","value","map","continent","setSelectedRadio","id","slice","country","index"],"sources":["/home/rudney/Bureau/react/react-app-1/src/components/Countries.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\n\nconst Countries = () => {\n    const [data, setData] = useState([]);\n    const [rangeValue, setRangeValue] = useState([36]);\n    const [selectedRadio, setSelectValue] = useState(\"\");\n    const radios = [\"Africa\", \"America\", \"Europe\", \"Asia\", \"Oceania\"];\n    useEffect(() =>{\n        \n        axios\n        .get(\"https://restcountries.com/v3.1/all\")\n        .then((res) => setData(res.data));\n    }, [])\n    return (\n        <div className='countries'>\n            <ul className=\"radio-container\">\n                <input type=\"range\" min=\"1\" max=\"250\" \n                defaultValue = {rangeValue} onChange={(e) => \n                setRangeValue(e.target.value)} />\n\n                {radios.map((continent) =>\n                <li>\n                    <input type=\"radio\" id={continent} name = \"continentRadio\" \n                    onChange={(e) => setSelectedRadio(e.target.id)\n                    \n                    }/>\n                    <label htmlFor={continent}>{continent}</label>\n                </li>\n                \n                )}\n                \n            </ul>\n            <ul>\n                {\n                    data\n                    .slice(0, rangeValue)\n                    .map((country, index) => (\n                    <Card key={index} country = {country}/>))\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default Countries;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA5C;EACA,MAAM,CAACO,aAAD,EAAgBC,cAAhB,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAMS,MAAM,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgC,MAAhC,EAAwC,SAAxC,CAAf;EACAV,SAAS,CAAC,MAAK;IAEXF,KAAK,CACJa,GADD,CACK,oCADL,EAECC,IAFD,CAEOC,GAAD,IAASR,OAAO,CAACQ,GAAG,CAACT,IAAL,CAFtB;EAGH,CALQ,EAKN,EALM,CAAT;EAMA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAI,SAAS,EAAC,iBAAd;MAAA,wBACI;QAAO,IAAI,EAAC,OAAZ;QAAoB,GAAG,EAAC,GAAxB;QAA4B,GAAG,EAAC,KAAhC;QACA,YAAY,EAAIE,UADhB;QAC4B,QAAQ,EAAGQ,CAAD,IACtCP,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;MAFb;QAAA;QAAA;QAAA;MAAA,QADJ,EAKKN,MAAM,CAACO,GAAP,CAAYC,SAAD,iBACZ;QAAA,wBACI;UAAO,IAAI,EAAC,OAAZ;UAAoB,EAAE,EAAEA,SAAxB;UAAmC,IAAI,EAAG,gBAA1C;UACA,QAAQ,EAAGJ,CAAD,IAAOK,gBAAgB,CAACL,CAAC,CAACC,MAAF,CAASK,EAAV;QADjC;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI;UAAO,OAAO,EAAEF,SAAhB;UAAA,UAA4BA;QAA5B;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADC,CALL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAkBI;MAAA,UAEQd,IAAI,CACHiB,KADD,CACO,CADP,EACUf,UADV,EAECW,GAFD,CAEK,CAACK,OAAD,EAAUC,KAAV,kBACL,QAAC,IAAD;QAAkB,OAAO,EAAID;MAA7B,GAAWC,KAAX;QAAA;QAAA;QAAA;MAAA,QAHA;IAFR;MAAA;MAAA;MAAA;IAAA,QAlBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH,CAxCD;;GAAMpB,S;;KAAAA,S;AA0CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}